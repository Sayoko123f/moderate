---
import "@/styles/global.css";
import { themeConfig } from "@/theme-config";
import TheDesktopHeader from "@/layouts/TheDesktopHeader.astro";
import TheMobileHeader from "@/layouts/TheMobileHeader.astro";
import {joinBaseURL} from '@/utils/url'
---

<!doctype html>
<html lang={themeConfig.lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <slot name="html-head" />
    <script is:inline>
      function initDarkMode() {
        const storageDarkValue = "dark";
        const storageKey = "theme";
        const systemMode = window.matchMedia("(prefers-color-scheme: dark)")
          .matches
          ? "dark"
          : "light";

        const mode = localStorage.getItem(storageKey) || systemMode;
        document.documentElement.classList.toggle(
          "dark",
          mode === storageDarkValue
        );
      }
      initDarkMode();
    </script>
  </head>
  <body>
    <TheDesktopHeader />
    <TheMobileHeader />
    <div class="h-appbar"></div>
    <slot />
    {import.meta.env.PROD && <script is:inline define:vars={{scriptUrl: joinBaseURL('/pagefind/pagefind.js')}}>
async function loadPagefind() {
    try {
        const response = await fetch(scriptUrl, { method: 'HEAD' });
        if (!response.ok) {
            throw new Error(`Pagefind script not found: ${response.status}`);
        }

        const pagefind = await import(scriptUrl);

        await pagefind.options({
            excerptLength: 20
        });

        window.pagefind = pagefind;

        document.dispatchEvent(new CustomEvent('pagefindready'));
        console.log('Pagefind loaded and initialized successfully, event dispatched.');
    } catch (error) {
        console.error('Failed to load Pagefind:', error);
        window.pagefind = {
            search: () => Promise.resolve({ results: [] }),
            options: () => Promise.resolve(),
        };
        document.dispatchEvent(new CustomEvent('pagefindloaderror'));
        console.log('Pagefind load error, event dispatched.');
    }
}

if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadPagefind);
} else {
    loadPagefind();
}
</script>}
    <script src="@/scripts/scroll.ts"></script>
  </body>
</html>
